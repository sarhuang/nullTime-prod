utils.ts
54f515e8 (Harrison Hoytt 2022-10-25 17:12:12 -0400  1) import { IGameCard } from "./interfaces";
54f515e8 (Harrison Hoytt 2022-10-25 17:12:12 -0400  2) 
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400  3) const testCardValues = [
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400  4)     'Harrison',
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400  5)     'Min Kao',
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400  6)     'Contigo',
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400  7)     'Tea',
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400  8)     'iPhone',
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400  9)     'Table',
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 10)     'Window',
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 11)     'Printer',
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 12)     'Truist',
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 13)     'Worlds Fair',
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 14)     'Paper',
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 15)     'Chair',
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 16)     'Whiteboard'
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 17) ]
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 18) 
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 19) export const GetRandomCardVal = (): string => {
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 20)     return testCardValues[Math.floor(Math.random()*testCardValues.length)];
54f515e8 (Harrison Hoytt 2022-10-25 17:12:12 -0400 21) }
54f515e8 (Harrison Hoytt 2022-10-25 17:12:12 -0400 22) 
54f515e8 (Harrison Hoytt 2022-10-25 17:12:12 -0400 23) export const GetRandomCard = (): IGameCard => {
54f515e8 (Harrison Hoytt 2022-10-25 17:12:12 -0400 24)     return {
54f515e8 (Harrison Hoytt 2022-10-25 17:12:12 -0400 25)         value: GetRandomCardVal(),
54f515e8 (Harrison Hoytt 2022-10-25 17:12:12 -0400 26)         id: Math.floor((Math.random()*99999)).toString(),
54f515e8 (Harrison Hoytt 2022-10-25 17:12:12 -0400 27)         owner: 0
54f515e8 (Harrison Hoytt 2022-10-25 17:12:12 -0400 28)     }
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 29) }

game-card-list.component.html
7bdef716 (Harrison Hoytt 2022-10-09 15:20:46 -0400  1) <div>
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400  2)     <div *ngIf="getTotalCards() > 0">
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400  3)         <div *ngIf="showAsList">
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400  5)             <p *ngIf="showTotalCards">{{ getTotalCards() }}</p>
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400  6)             <button *ngIf="canAddCards" (click)="addCard()">Add Card</button>
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400  7)             <!-- *ngFor is a directive that iterates through allCards, renders the given element to the DOM, and gives us a referece to an object in allCards to use -->
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400  8)             <div *ngFor="let card of allCards">
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400  9)                 <!-- [card] is us binding the given card to the given component -->
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 10)                 <app-game-card [card]="card" [canEdit]="canEditCards"></app-game-card>
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 11)             </div>
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 12)         </div>
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 13)         <div *ngIf="!showAsList">
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 14)             <p *ngIf="showTotalCards">{{ getTotalCards() }}</p>
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 15)             <app-game-card [card]="allCards[currentCardIndex]" (handleClick)="cardClicked($event)"></app-game-card>
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 16)             <button class="skip-button" (click)="incrementCardIndex()">Skip</button>
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 17)         </div>
7bdef716 (Harrison Hoytt 2022-10-09 15:20:46 -0400 18)     </div>
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 19)     <div *ngIf="getTotalCards() === 0">
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 20)         <p>Out of Cards</p>
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 21)     </div>

game-card-list.component.ts
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400  1) import { Component, Input, OnInit } from '@angular/core';
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400  2) import { GetRandomCardVal } from 'src/gameHelper/utils';
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 15) 	@Input() canAddCards: boolean = false;
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 16) 	@Input() canEditCards: boolean = false;
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 17) 	@Input() showTotalCards: boolean = false;
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 18) 	@Input() showAsList: boolean = true; //Setting this to true disables the game play version
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 19) 
54f515e8 (Harrison Hoytt 2022-10-25 17:12:12 -0400 20) 	@Input() allCards: IGameCard[] = [];
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 21) 	currentCardIndex: number = 0; //The current card to show when not in list form
54f515e8 (Harrison Hoytt 2022-10-25 17:12:12 -0400 27) 		//document.body.style.backgroundImage = "url('assets/images/red_swirl_bg.jpg')";
54f515e8 (Harrison Hoytt 2022-10-25 17:12:12 -0400 28) 		// for (let i = 0; i < 5; i++) {
54f515e8 (Harrison Hoytt 2022-10-25 17:12:12 -0400 29) 		// 	this.addCard();
54f515e8 (Harrison Hoytt 2022-10-25 17:12:12 -0400 30) 		// }
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 37) 			value: GetRandomCardVal(),
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 56) 	incrementCardIndex = () => {
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 57) 		//Use this to increment the card index, it ensures we don't go out of bounds
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 58) 		if (this.currentCardIndex+1 >= this.allCards.length) {
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 59) 			this.currentCardIndex = 0;
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 60) 		} else {
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 61) 			this.currentCardIndex++;
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 62) 		}
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 63)  	}
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 64) 
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 65) 	cardClicked = (success: boolean): void => {
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 66) 		if (this.showAsList) return;
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 67) 
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 68) 		console.log(success);
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 69) 		if (success) {
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 70) 			this.cardGuessed();
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 71) 		} else {
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 72) 			this.incrementCardIndex();
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 73) 		}
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 74) 	}
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 75) 
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 76) 	cardGuessed = () => {
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 77) 		//Card was guessed, remove it from the list and go to the next card
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 78) 		const card = this.allCards[this.currentCardIndex];
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 79) 		const index = this.allCards.findIndex(x => x.id === card.id);
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 80) 
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 81) 		if (index === -1) {
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 82) 			console.error('game-card-list.ts cardGuessed() Failed: Card ID could not be found!');
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 83) 			return;
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 84) 		}
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 85) 
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 86) 		card.owner = 0; //TODO: Get the current playing team from the game manager and set this
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 87) 		this.allCards.splice(index, 1);
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 88) 		this.incrementCardIndex();
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 89) 	}
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 90) 
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 91) 	getTotalCards(): number {
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 92) 		return this.allCards.length;
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 93) 	}
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 94) 

game-card-list.component.scss
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 55) .skip-button {
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 56)     margin: 10px;
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 57)     padding: 4px;
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 58)     font-size: 20px;

game-card.component.ts
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400  1) import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 13) 	@Input() canEdit: boolean = false;
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 14) 	@Output() handleClick = new EventEmitter<boolean>();
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 19) 		if (this.canEdit) {
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 20) 			this.isEditing = !this.isEditing;
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 21) 		}
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 22) 	}
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 23) 
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 24) 	cardSuccess = () => {
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 25) 		//This runs when a person guesses the card
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 26) 		this.handleClick.emit(true);
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 27) 	}
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 28) 
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 29) 	cardFail = () => {
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 30) 		//This runs when a person skips a card
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400 31) 		this.handleClick.emit(false);

game-card.component.html
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400  2) <mat-card *ngIf="!!card" class="game-card" (click)="cardSuccess()">
cb01cf92 (Harrison Hoytt 2022-10-25 16:12:17 -0400  6)         <input [(ngModel)]="card.value" (blur)="toggleEdit()" autofocus maxlength="30" />
